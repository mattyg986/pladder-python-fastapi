# Purple Ladder AI Platform - Environment Configuration Example
# Copy this file to .env and fill in your values

# OpenAI API Key - Required for all environments
OPENAI_API_KEY=your_openai_api_key_here

# Application Environment
# Options: development, production
APP_ENV=development

# Supabase Configuration for FastAPI Backend
# Create a Supabase project and get these values from the Supabase dashboard
SUPABASE_URL=your_supabase_project_url
SUPABASE_KEY=your_supabase_service_role_key  # Use the service role key for backend operations

# React-specific Supabase Configuration
# These are used by the React frontend
# Note: When deploying, ensure these variables are available to the frontend build process
REACT_APP_SUPABASE_URL=your_supabase_project_url
REACT_APP_SUPABASE_ANON_KEY=your_supabase_anon_key  # Use the anon/public key for frontend operations

# Redis Settings
# IMPORTANT: Redis Configuration Differs Between Environments
# 
# 1. LOCAL DEVELOPMENT: 
#    You can use either a local Redis or the public Railway Redis URL:
#    - Local Redis: redis://localhost:6379/0
#    - Railway Public URL: redis://default:password@metro.proxy.rlwy.net:port/0
#
# 2. RAILWAY PRODUCTION:
#    In production on Railway, we use the private network connection:
#    - In the Railway dashboard, connect the Redis service to your app
#    - Railway automatically sets up: ${{ Redis.REDIS_URL }}
#    - Don't set this manually in Railway dashboard environment variables
#
REDIS_URL=redis://localhost:6379/0

# Security
# Run `openssl rand -hex 32` to generate a secure key
SECRET_KEY=your_secret_key_here

# Web Server Settings
PORT=8000
HOST=0.0.0.0

# Celery Settings
CELERY_CONCURRENCY=2

# Docker Compose Settings
# Set this to read-only in production: ./app:/app/app:ro
MOUNT_APP=./app:/app/app

# Production Settings
# Use with ./deploy.sh production
WEB_COMMAND=gunicorn -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000 app.main:app 